package holdme

import "fmt"

// Ordered{{.T}}sDups keeps a slice of {{.t}}s in order, allowing duplicate values.
type Ordered{{.T}}sDups []{{.t}}

func (slice Ordered{{.T}}sDups) Add(v {{.t}}) Ordered{{.T}}sDups {
    left := 0
    ln := len(slice)
    hi := ln
    for left < hi {
        mid := (left + hi) / 2
        if slice[mid] < v {
            left = mid + 1
        } else {
            hi = mid
        }
    }
    if left == ln {
        return append(slice, v)
    }
    slice = append(slice, 0)
    copy(slice[left+1:], slice[left:])
    slice[left] = v
    return slice
}

func (slice Ordered{{.T}}sDups) Remove(v {{.t}}) Ordered{{.T}}sDups {
    left := 0
    ln := len(slice)
    hi := ln
    for left < hi {
        mid := (left + hi) / 2
        if slice[mid] < v {
            left = mid + 1
        } else {
            hi = mid
        }
    }
    if left < ln && slice[left] == v {
        return append(slice[:left], slice[left+1:]...)
    }
    return slice
}

func (slice Ordered{{.T}}sDups) String() string {
    return fmt.Sprintf("%v", []{{.t}}(slice))
}
